
package serv;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TestService", targetNamespace = "http://serv/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TestService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMessage", targetNamespace = "http://serv/", className = "serv.GetMessage")
    @ResponseWrapper(localName = "getMessageResponse", targetNamespace = "http://serv/", className = "serv.GetMessageResponse")
    @Action(input = "http://serv/TestService/getMessageRequest", output = "http://serv/TestService/getMessageResponse")
    public String getMessage();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplica", targetNamespace = "http://serv/", className = "serv.Multiplica")
    @ResponseWrapper(localName = "multiplicaResponse", targetNamespace = "http://serv/", className = "serv.MultiplicaResponse")
    @Action(input = "http://serv/TestService/multiplicaRequest", output = "http://serv/TestService/multiplicaResponse")
    public double multiplica(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
